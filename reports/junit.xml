<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="4" time="3.329" timestamp="2025-01-11T15:28:16.893902" hostname="felipe-Lenovo-YOGA-720-13IKB"><testcase classname="tests.model.test_model.TestModel" name="test_model_fit" time="0.644"><failure message="AssertionError: assert 0.8459057614518422 &lt; 0.6">self = &lt;tests.model.test_model.TestModel testMethod=test_model_fit&gt;

    def test_model_fit(
        self
    ):
        features, target = self.model.preprocess(
            data=self.data,
            target_column="delay"
        )
    
        _, features_validation, _, target_validation = train_test_split(features, target, test_size = 0.33, random_state = 42)
    
        self.model.fit(
            features=features,
            target=target
        )
    
        predicted_target = self.model._model.predict(
            features_validation
        )
    
        report = classification_report(target_validation, predicted_target, output_dict=True)
    
&gt;       assert report["0"]["recall"] &lt; 0.60
E       AssertionError: assert 0.8459057614518422 &lt; 0.6

tests/model/test_model.py:92: AssertionError</failure></testcase><testcase classname="tests.model.test_model.TestModel" name="test_model_predict" time="0.414"><failure message="ValueError: The model must be trained before making predictions.">self = &lt;tests.model.test_model.TestModel testMethod=test_model_predict&gt;

    def test_model_predict(
        self
    ):
        features = self.model.preprocess(
            data=self.data
        )
    
&gt;       predicted_targets = self.model.predict(
            features=features
        )

tests/model/test_model.py:105: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;challenge.model.DelayModel object at 0x7fac13572680&gt;
features =        OPERA_Latin American Wings  MES_7  MES_10  OPERA_Grupo LATAM  MES_12  TIPOVUELO_I  MES_4  MES_11  OPERA_Sky Air... 0                  0       0            0      0       0                  0               0

[68206 rows x 10 columns]

    def predict(self, features: pd.DataFrame) -&gt; List[int]:
        """
        Predict delays for new flights.
    
        Args:
            features (pd.DataFrame): Preprocessed features.
    
        Returns:
            List[int]: Predicted targets.
        """
        if self._model is None:
&gt;           raise ValueError("The model must be trained before making predictions.")
E           ValueError: The model must be trained before making predictions.

challenge/model.py:80: ValueError</failure></testcase><testcase classname="tests.model.test_model.TestModel" name="test_model_preprocess_for_serving" time="0.420" /><testcase classname="tests.model.test_model.TestModel" name="test_model_preprocess_for_training" time="0.432" /></testsuite></testsuites>